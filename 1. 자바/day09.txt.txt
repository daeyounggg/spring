기능적인 부분을 담당하는 클래스 -> 객체 생성 많이 X
- 처음부터 활성화 -> 사용하지않아도 활성화

싱글턴 패턴 -> 사용할때만 메모리 생성 - 하나의 객체 공유	
1) 생성자 private -> 외부에서 생성 X
2) 클래스 내부에서 정적 객체를 생성
3) 외부에서 객체에 접근 가능한 정적 메서드를 추가

상속	
1. 상속이란?

2. 클래스의 상속
3. 클래스 상속 문법

class 자식클래스 extends 부모 클래스 {
 
}

컴파일러가 추가 기본 추가
- 기본생성자
- 모든 생성자 메서드의 첫번째 라인
   super()


C() -> super() : B() -> super() : A()

A 객체 -> B 객체 -> C객체


super
1) 지역변수 : 상위 클래스의 객체의 주소값
2) 생성자 메서드 : 상위클래스의 생성자 메서드
   super()


4. 상위 클래스로 묵시적 클래스 형 변환
하위클래스 -> 상위클래스 자동 형변화
C -> A,B

상위클래스 -> 하위 클래스 : 명시적 형변환



5. 메서드 오버라이딩(재정의)
6. 묵시적 형변환과 메서드 재정의
7. 가상 메서드

다형성
1. 다운 캐스팅과 instanceof

상위클래스 -> 하위 클래스로 형변환
  - 상위클래스의 출처가 다를 수 있는 가능성
  - 객체의 출처를 체크 - instanceof 연산자


  참조변수 instanceof 클래스 자료형
