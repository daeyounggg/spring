쿠키
- 개인화된 서비스 제공 기술 (서버가 제공) 
- 개개인이 필요한 데이터 - 개개인을 구분하려면? 브라우저마다 다른 데이터가 저장
- 브라우저에 저장
- 서버가 이 쿠키 데이터가 필요

서버 응답헤더(Set-Cookie: 이름=값; ...) -> 브라우저 수신, 저장 -> 요청 헤더(cookie)를 서버 전송

HttpServletRequest
	Cookie[] getCookies()
	
HttpServletResponse
	- addCookie(Cookie cookie)

1. 쿠키의 동작 과정
1) 쿠키 생성단계
서버에서 응답 헤더
	Set-Cookie : 이름=값; 이름=값;
	
2) 쿠키 저장단계
브라우저 응답 헤더(Set-Cookie)의 내용을 참고해서 쿠키 저장

3) 쿠키 전송단계
브라우저는 매 요청시 마다 요청 헤더 cookie에 담아서 서버로 전송 


2. Cookie 클래스의 메서드 종류
3. 쿠키 객체 얻기
4. 쿠키 객체의 정보 얻기
5. 쿠키 삭제
- 쿠키의 만료시간(Max-Age)을 현재 시간보다 이전으로 변경하면 브라우저가 삭제
- Cookie
	.setMaxAge(0) : 1970.1.1. 0:0:0
	
	
	
세션
- 쿠키 단점
1) 브라우저에 저장되는 데이터 : 노출 가능, 자바스크립트로 조회
2) 매 요청시 마다 서버로 요청 헤더를 통해서 전송 
	- http로 연결된 네트워크이면 패킷이 암호화 X
	- 많은 데이터를 네트워크를 통해서 전송, 부담 O
	
- 세션
	1) 개인화된 서비스 제공 기술
		- 개개인 구분할 수 있는 SESSION ID라는 쿠키
		
	2) 데이터는 서버에 직접 저장
	3) 데이터가 네트워크를 통해서 전송 X
	4) 쿠키는 저장 가능 데이터는 텍스트  Only, 세션은 다양한 형태의 데이터를 저장
	
1. session 내장객체 메서드 종류
2. 	세션 생성
	void setAttribute(String name, Object value)
	
3. 세션 정보
	Object getAttribute(String name);
	
4. 세션 삭제
	void removeAttribute(String name);
	
	invalidate() : 세션 비우기 - 로그아웃 구현시 사용
	
5. 세션 유효 시간 설정
- setMaxInactiveInterval