화살표 함수 
- 함수를 매개변수로 사용되는 경우 

1) function, 함수명 생략 
2) 매개변수 정의 부분 구현 코드 사이 =>
3) 구현 코드가 한줄 일경우 { .. } 생략, return 예약어 생략
4) 매개변수가 1개 일 경우 (...) 생략 가능, 다만 매개변수가 없는 경우 (..) 생략 불가

- this는 함수를 정의할때 결정 (this의 범위를 변경 X)
- arguments 객체 X 


내장 객체 
- 네이티브 객체(ECMAScript Core)
	1. 내장 생성자
		Object
			- 모든 객체는 Object.prototype을 상속 / Object 생성자로 만들어진  객체 
			- new Object(); ->  { }
			- 객체와 관련된 핵심적인 메서드, 속성 정의
			
			
			- 모든 속성 
					- value
					- configurable : 설정 가능여부 
										- false : 설정 변경 불가 / 다만 writable: true -> writable: false 변경 한번 가능 
												   삭제 불가 
					- writable : 쓰기 가능여부(쓰기, 수정)
					- enumerable : 열거 가능 여부
					
					- set  : setter 설정 
					- get : getter 설정 
					
				속성의 설정 상태 확인
					- Object.getOwnPropertyDescriptor()
					- Object.getOwnPropertyDescriptors()
				
				속성의 설정 변경 
					- Object.defineProperties()
					- Object.defineProperty()
				
				
			- Object.create : 상세하게 객체 생성 정의 
			- Object.freeze(...) : 객체 동결 
										- 속성 수정, 삭제, 추가 불가 
			- Object.seal(...) : 객체 밀봉
										- 삭제 불가, 추가 불가, 수정 가능 
			
			Object.prototype.hasOwnProperty() 
					- 객체가 소유한 속성중에서 특정 속성이 포함되어 있는지 체크하는 메서드
					
					참고) 
							'속성명' in  객체 : 객체에 있는 모든 속성(+상속 포함) '속성명' 포함되어 있는지 체크 
							
			Object.isExtensible() :  속성추가가 가능한지 여부 
			Object.preventExtensions() : 속성 추가 방지  / 동결, 밀봉 상태에서 추가를 못하게 막는 것은 이 메서드를 활용...
			
			
			Object.keys() : 속성명을 배열 객체로 반환 
			Object.values() : 속성값을 배열 객체로 반환 
			
		String
			let str = "ABC"; // 원시타입 
			str = str.toLowerCase();    -> new String(str).toLowerCase() -> str
			
			split(..) : 특정 문자열로 잘라서 -> 배열 객체 
					참고) 배열에서 특정 문자열로 결합 -> 문자열 
							join(...);
			
			참고)
				Number, String -> Wrapper 생성자 객체 
			
		참고)
			태그 함수 : 템플릿 리터럴에서 적용 가능
					(전개 연산자(가변 매개변수) ....)
					
		
		Number 
				- 다른 타입의 자료 -> 숫자로 변환 
				
			NaN(Not a Number)
			
			isNaN(값) : 숫자가 아니면 true(NaN) / false - 숫자 
				참고) 문자로된 숫자 -> false로 인식 
					판별 기준이 Number 생성자로 값을 넣어서 호출했을때 NaN나오면 true
					
					"1234"  -> Number("1234")  -> false
					
			parseInt(...) : 정수로 변환 
			parseFloat(...) : 실수로 변환
			
		Boolean(..)
					- false 또는 true로 인식될 수 있는 값을 실제 논리값으로 변환(true, false)
					
					- false : 0, '', null, undefined 
					- true : false로 인식하는 값을 제외한 모든 값  
			
		
		Array 
		...
	2. 내장 객체
		Math 
		JSON 
		
- 호스트 객체  : 웹브라우저 객체 
	window 
		.location 
		.history 
		.screen 
		.navigator 
		.document
		
		....





배열
배열의 기초
- 배열 객체 : 배열 X, 배열의 기능을 유사하게 구현한 객체 
	
1. 배열 리터럴로 생성하기
	new Array(매개변수)
		 매개변수 : 숫자 - 갯수 1개 : 배열 객체의 공간 갯수 (음수는 사용 X)
							 - 갯수 2개 이상 : 배열의 요소 
		
		[[Prototype]] : Array.prototype
	const 변수명 = [ ..... ];
	
	배열의 값으로 사용 가능한 자료형 : 전부 다 (원시타입 + 객체)
	
	속성명이 순서 번호
		- 숫자는 마침표 연산자로 접근 X -> [숫자]
	
	배열명[숫자]
	
2. length 프로퍼티
3. Array 생성자로 생성하기
	
	
		
4. 배열 요소의 참조
5. 배열은 객체
6. 배열 요소의 추가와 삭제
	- 객체와 같이 추가, 삭제 하면 배열처럼 동작 X
	
	
	Array.prototype 
	추가)
			push(...items) : 끝에 추가 
			unshift(...items) : 맨 앞에 추가 
	
	삭제)
			pop() : 끝에서 꺼내기(반환값이 꺼낸 요소)
			shift() : 앞에서 꺼내기(반환값이 꺼낸 요소)
	
	중간 추가, 삭제, 변경 
		splice()
	
	
7. 배열 요소가 있는지 확인하기
		indexOf 
		lastIndexOf 
		
		없으면 -1

배열의 메서드
1. Array.prototype의 메서드 목록
		concat(..) : 반환값이 새로운 배열 객체  
		slice(..) : 반환값이 새로운 배열 객체

	얕은 복사(shallow copy) : 주소만 복사 
	깊은 복사(deep copy) : 새로운 객체 + 복사 
	
	
	참고)
		자바스크립트 코딩 가이드라인 : Airbnb JavaScript 스타일 가이드
			- 배열 복사 : slice 권장 
			- 배열 추가 : concat() 
			
				...  : 전개 연산자(spread operator) 
						1) 깊은 복사 
						2) 배열 -> 일반 변수 
						3) 객체 
						
다차원 배열

유사배열
	배열 객체는?
		1) 속성명이 순서 번호 
		2) length 속성
		3) 프로토타입 체인 -> Array.prototype 

		만약에 1,2만 충족된 형태 : 유사 배열 객체 

참고)
	ES6 : 물리적 배열
			Int8Array
			Int16Array .. 
			
			HTML5 
				WebRTC 
				FileAPI 
				WebGL

ECMAScript6+에 추가된 기능
이터레이터
Symbol.interator 
	.next() 
	
	for ... of 구문 :  이터레이터가 정의된 경우 사용 가능 


try{

	throw new Error("에러 메세지");

} catch(e) {
	
}

Date 생성자 객체 : 날짜/시간

내장 객체
	Math
		abs() : 절대값
		sign() : 부호(음수 -1, 양수 1,0)
		sqrt() : 
		pow(...) : Math.pow(2,3) : 2의 3승 -8
	
		round() : 반올림
		floor() : 버림
		ceil() : 올림
		
		random() : 0~1 사이의 난수
		
	JSON - (JavaScript Object Notation - 자바스크립트 객체 표기법)
			- 자바스크립트 표기법으로 표현된 문자열
			- 다른 플랫폼과 통신하기 위한 공통 형식
			
			- stringify(자바스크립트 객체) : 자바스크립트 객체 -> JSON 문자열로 변환 (직렬화)
			- parse("JSON 문자열") : JSON 문자열 -> 자바스크립트 객체 



비구조화 할당

1. 배열의 비구조화 할당

1) 기본적인 사용법
	- 배열의 값을 변수 각각으로 분해 할당
	
2) 이미 선언된 변수를 비구조화 할당하는 예
3) 나머지 요소
4) 요소의 기본값

2. 객체의 비구조화 할당
1) 기본적인 사용법
	
	
2) 프로퍼티의 기본값
	
3) 프로퍼티 이름 생략하기

4) 반복 가능한 객체의 비구조화 할당
	- Iterator
	- Generator
	
		function* 함수명() {
			yield 값;
			yield 값;
			...
		}
		
5) 중첩된 자료 구조의 비구조화 할당

3. 전개 연산자
... : 전개 연산자(Spread Operator)
	- 객체의 깊은 복사
   : 나머지 연산자 






웹 브라우저 객체
1. 웹브라우저에서 자바스크립트 실행 순서

서버응답(텍스트 형태 HTML) -> 브라우저 변환(Document 객체), DOMTree 재구성(이진 트리)	완료 (작업 시간 소요)
													-> DOMContentLoaded 이벤트 발생 (Document 객체 변환, DOMTree)
													-> load 이벤트 발생 (정적 자원의 로딩 완료 - 이미지, 비디오, css 파일, js 파일 ...)



참고)
	<script>
		자바스크립트 코드 -> 자바스크립트 엔진(V8)에 의해서 해석
	</script>
	
	<script src = "스크립트 파일 경로"></script>
		자바스크립트 파일 확장자 .js
		
	HTML 요소의 이벤트 처리 속성 

2. async와 defer 속성
	script 태그에 추가하는 속성
	
	async : 비동기 처리
	defer : script 파일을 DOMContentLoaded 이벤트 이후에 실행

3. CSS와 렌더링

4. 웹브라우저 렌더링 엔진과 자바스크립트 엔진


참고)
	Document 객체 안에 Document 객체
		- 컴포지트 패턴 : UI 관련
		
	java.swing...	
		Component 객체 - Component 객체
	
	안드로이드
		View 객체 - View 객체

Window 객체 
- 가장 상위 객체
- 창을 생성할때마다 독립적인 window 객체 생성

1. Window 객체의 주요 프로퍼티
	console
			.log(...) : 값 확인
			.dir(...) : 객체의 속성과 값...
			.error(...) : 값 확인, 에러처럼 보이기 위해서 빨간색으로 출력
			.trace() : 코드까지 도달하는데 거친 경로 stack 형태로 보여줄때
			
2. Window 객체의 주요 메서드

Location 객체
1. Location 객체의 프로퍼티
2. Location 객체의 메서드
